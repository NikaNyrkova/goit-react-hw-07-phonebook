{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactListItem/ContactListItem.module.css","components/Filter/Filter.module.css","components/Section/Section.module.css","components/ContactList/ContactList.module.css","redux/phonebook/phonebook-actions.js","services/phonebook-api.js","redux/phonebook/phonebook-operations.js","redux/phonebook/phonebook-reducer.js","redux/store.js","components/Section/Section.js","redux/phonebook/phonebook-selectors.js","components/ContactForm/ContactForm.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","filterContacts","createAction","fetchContacts","a","axios","get","data","deleteContact","id","delete","addContact","contact","post","defaults","baseURL","createAsyncThunk","phonebookAPI","contacts","contactsReducer","createReducer","fulfilled","state","payload","filter","_","filterReducer","loading","pending","rejected","combineReducers","phonebookContacts","phonebookFilter","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","phonebookReducer","devTools","Section","title","children","className","st","section","getAllPhonebookContacts","getPhonebookFilter","getVisibleContact","createSelector","normalizedFilter","toLowerCase","name","includes","number","ContactForm","useState","setContact","dispatch","useDispatch","idInputName","uuidv4","idInputNumber","allContacts","useSelector","reset","handleChange","e","currentTarget","value","prevState","addNoRepeatContact","cont","some","alert","onSubmit","preventDefault","form_contact","htmlFor","label","type","onChange","input","pattern","required","button","ContactListItem","map","item","onClick","ContactList","useEffect","list","Filter","valueFilter","target","App","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ea057640.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_contact\":\"ContactForm_form_contact__3zkwZ\",\"label\":\"ContactForm_label__RbtfU\",\"input\":\"ContactForm_input__d8UQW\",\"button\":\"ContactForm_button__2_ohI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactListItem_item__8jvX3\",\"button\":\"ContactListItem_button__11dpp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2eWHt\",\"input\":\"Filter_input__1NZGh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3kG_a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2L8vm\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const filterContacts = createAction(\"phonebook-filter\");\r\n","import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"http://localhost:3000\";\r\n\r\nexport async function fetchContacts() {\r\n  const { data } = await axios.get(\"/contacts\");\r\n  return data;\r\n}\r\n\r\nexport async function deleteContact(id) {\r\n  const { data } = await axios.delete(`/contacts/${id}`);\r\n  return data;\r\n}\r\n\r\nexport async function addContact(contact) {\r\n  const { data } = await axios.post(\"/contacts\", contact);\r\n  return data;\r\n}\r\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nimport * as phonebookAPI from \"../../services/phonebook-api\";\r\n\r\naxios.defaults.baseURL = \"http://localhost:3000\";\r\n\r\nexport const addContact = createAsyncThunk(\r\n  \"phonebook/addContact\",\r\n  async (contact) => {\r\n    const data = await phonebookAPI.addContact(contact);\r\n    return data;\r\n  }\r\n);\r\n\r\nexport const deleteContact = createAsyncThunk(\r\n  \"phonebook/deleteContact\",\r\n  async (id) => {\r\n    await phonebookAPI.deleteContact(id);\r\n    return id;\r\n  }\r\n);\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n  \"phonebook/fetchContacts\",\r\n  async () => {\r\n    const contacts = await phonebookAPI.fetchContacts();\r\n    return contacts;\r\n  }\r\n);\r\n\r\n// TRY CATCH\r\n// export const addContact = (contact) => async (dispatch) => {\r\n//   dispatch(addContactRequest());\r\n//   try {\r\n//     const data = await phonebookAPI.addContact(contact)\r\n//     dispatch(addContactSuccess(data));\r\n//   } catch (error) {\r\n//     dispatch(addContactError(error.message))\r\n//   }\r\n// };\r\n\r\n// export const deleteContact = (id) => async (dispatch) => {\r\n//   dispatch(deleteContactRequest());\r\n//   try {\r\n//     await phonebookAPI.deleteContact(id);\r\n//     dispatch(deleteContactSuccess(id));\r\n//   } catch (error) {\r\n//     dispatch(deleteContactError(error.message))\r\n//   }\r\n// };\r\n\r\n// export const fetchContacts = () => async (dispatch) => {\r\n//   dispatch(fetchContactsRequest());\r\n//   try {\r\n//     const contacts = await phonebookAPI.fetchContacts();\r\n//     dispatch(fetchContactsSuccess(contacts));\r\n//   } catch (error) {\r\n//     dispatch(fetchContactsError(error.message))\r\n//   }\r\n// };\r\n","import { createReducer, combineReducers } from \"@reduxjs/toolkit\";\r\nimport { filterContacts } from \"./phonebook-actions\";\r\nimport {\r\n  fetchContacts,\r\n  deleteContact,\r\n  addContact,\r\n} from \"./phonebook-operations\";\r\n\r\nconst contactsReducer = createReducer([], {\r\n  [addContact.fulfilled]: (state, { payload }) => [...state, payload],\r\n  [deleteContact.fulfilled]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n  [fetchContacts.fulfilled]: (_, { payload }) => payload,\r\n});\r\n\r\nconst filterReducer = createReducer(\"\", {\r\n  [filterContacts]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [addContact.pending]: () => true,\r\n  [addContact.rejected]: () => false,\r\n  [addContact.fulfilled]: () => false,\r\n  [deleteContact.pending]: () => true,\r\n  [deleteContact.rejected]: () => false,\r\n  [deleteContact.fulfilled]: () => false,\r\n  [fetchContacts.pending]: () => true,\r\n  [fetchContacts.rejected]: () => false,\r\n  [fetchContacts.fulfilled]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  phonebookContacts: contactsReducer,\r\n  phonebookFilter: filterReducer,\r\n  loading,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport { logger } from \"redux-logger\";\r\nimport phonebookReducer from \"./phonebook/phonebook-reducer\";\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nexport const store = configureStore({\r\n  reducer: phonebookReducer,\r\n  middleware,\r\n  devTools: true,\r\n});\r\n\r\n// middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger),\r\n","import React from 'react';\r\n\r\nimport st from './Section.module.css';\r\n\r\n\r\nconst Section = ({title, children}) => {\r\n    return (\r\n        <section className={st.section}>\r\n            <h2>{title}</h2>\r\n            {children}\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Section;","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const getAllPhonebookContacts = (state) => state.phonebookContacts;\r\nexport const getPhonebookFilter = (state) => state.phonebookFilter;\r\n\r\nexport const getVisibleContact = createSelector(\r\n  [getAllPhonebookContacts, getPhonebookFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter(\r\n      (contact) =>\r\n        contact.name.toLowerCase().includes(normalizedFilter) ||\r\n        contact.number.includes(filter)\r\n    );\r\n  }\r\n);\r\n","import React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { getAllPhonebookContacts } from \"../../redux/phonebook/phonebook-selectors\";\r\nimport { addContact } from \"../../redux/phonebook/phonebook-operations\";\r\n\r\nimport st from \"./ContactForm.module.css\";\r\n\r\nconst ContactForm = () => {\r\n  const initialState = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n  const [contact, setContact] = useState(initialState);\r\n  const dispatch = useDispatch();\r\n  const onSubmit = (contact) => dispatch(addContact(contact));\r\n\r\n  const idInputName = uuidv4();\r\n  const idInputNumber = uuidv4();\r\n  const allContacts = useSelector((state) => getAllPhonebookContacts(state));\r\n\r\n  const reset = () => {\r\n    setContact({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    setContact((prevState) => ({ ...prevState, [name]: value }));\r\n  };\r\n\r\n  const addNoRepeatContact = (cont, contacts) => {\r\n    const { name, number } = cont;\r\n    if (\r\n      contacts.some(\r\n        (contacts) => contacts.name.toLowerCase() === name.toLowerCase()\r\n      )\r\n    ) {\r\n      alert(`${name} is already in contacts`);\r\n      return;\r\n    }\r\n    if (contacts.some((contacts) => contacts.number === number)) {\r\n      alert(`${number} is already in contacts`);\r\n      return;\r\n    }\r\n\r\n    onSubmit(cont);\r\n    reset();\r\n  };\r\n\r\n  const handleSubmitForm = (e) => {\r\n    e.preventDefault();\r\n    addNoRepeatContact(contact, allContacts);\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmitForm} className={st.form_contact}>\r\n      <label htmlFor={idInputName} className={st.label}>\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          id={idInputName}\r\n          onChange={handleChange}\r\n          value={contact.name}\r\n          className={st.input}\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n      </label>\r\n      <label htmlFor={idInputNumber} className={st.label}>\r\n        Number\r\n        <input\r\n          type=\"tel\"\r\n          id={idInputNumber}\r\n          onChange={handleChange}\r\n          value={contact.number}\r\n          className={st.input}\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n      </label>\r\n      <button type=\"submit\" className={st.button}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\n\r\nimport st from \"./ContactListItem.module.css\";\r\n\r\nconst ContactListItem = ({ contacts, deleteContact }) => {\r\n  return contacts.map(({ id, name, number }) => {\r\n    return (\r\n      <li key={id} className={st.item}>\r\n        <span>\r\n          {name}: {number}\r\n        </span>\r\n        <button\r\n          onClick={() => deleteContact(id)}\r\n          type=\"button\"\r\n          className={st.button}\r\n        >\r\n          Delete\r\n        </button>\r\n      </li>\r\n    );\r\n  });\r\n};\r\n\r\nexport default ContactListItem;\r\n","import { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  deleteContact,\r\n  fetchContacts,\r\n} from \"../../redux/phonebook/phonebook-operations\";\r\nimport { getVisibleContact } from \"../../redux/phonebook/phonebook-selectors\";\r\n\r\nimport st from \"./ContactList.module.css\";\r\n\r\nimport ContactListItem from \"../ContactListItem/ContactListItem\";\r\n\r\nconst ContactList = () => {\r\n  const contacts = useSelector(getVisibleContact);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <ul className={st.list}>\r\n      <ContactListItem\r\n        contacts={contacts}\r\n        deleteContact={(id) => dispatch(deleteContact(id))}\r\n      />\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { filterContacts } from \"../../redux/phonebook/phonebook-actions\";\r\nimport { getPhonebookFilter } from \"../../redux/phonebook/phonebook-selectors\";\r\nimport st from \"./Filter.module.css\";\r\n\r\nconst Filter = () => {\r\n  const valueFilter = useSelector(getPhonebookFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <label className={st.label}>\r\n      Find contact by name\r\n      <input\r\n        type=\"text\"\r\n        className={st.input}\r\n        value={valueFilter}\r\n        onChange={(e) => dispatch(filterContacts(e.target.value))}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Section from \"./components/Section\";\r\nimport ContactForm from \"./components/ContactForm\";\r\nimport ContactList from \"./components/ContactList\";\r\nimport Filter from \"./components/Filter\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Section title=\"Phonebook\">\r\n          <ContactForm />\r\n        </Section>\r\n        <Section title=\"Contacts\">\r\n          <Filter />\r\n          <ContactList />\r\n        </Section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./redux/store\";\r\n\r\nimport \"modern-normalize/modern-normalize.css\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}